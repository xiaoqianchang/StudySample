plugins {
    id 'com.android.library'
    id 'kotlin-android'
}

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

        externalNativeBuild {

            // For ndk-build, instead use the ndkBuild block.
            cmake {

                // Passes optional arguments to CMake.
                arguments "-DANDROID_STL=c++_shared" // 为了编译出libc++_shared.so

                // Sets a flag to enable format macro constants for the C compiler.
//                cFlags "-D__STDC_FORMAT_MACROS"

                // Sets optional flags for the C++ compiler.
//                cppFlags ""

                // 生成多个版本的so文件，如果不指定会根据对应平台架构生成（默认有armeabi-v7a、arm64-v8a、x86、x86_64）
//                abiFilters 'armeabi-v7a'//, 'arm64-v8a', 'x86', 'x86_64'
            }
            // or ndkBuild {...}
        }

        // Similar to other properties in the defaultConfig block,
        // you can configure the ndk block for each product flavor
        // in your build configuration.
        // 注意：如果 app 中也有 ndk 配置，会导致编译失败
//        ndk {
//            // Specifies the ABI configurations of your native
//            // libraries Gradle should build and package with your app.
//            abiFilters 'armeabi-v7a'//, 'arm64-v8a', 'x86', 'x86_64'
//        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main {
            jni.srcDirs = []
            jniLibs.srcDirs = ['src/main/jniLibs']
        }
    }

    // Use this block to link Gradle to your CMake or ndk-build script.
//    externalNativeBuild { // 设置cmake编译脚本，编译ndk，配置CMakeLists.txt路径
//
//        // Encapsulates your CMake build configurations.
//        cmake {
//
//            // Provides a relative path to your CMake build script.
//            path "src/main/cpp/CMakeLists.txt"
//
//            // 未设置特定 CMake 版本的项目使用 CMake 3.10.2 进行构建。
//            version "3.10.2"
//        }
//        // or ndkBuild {...}
//    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.3.0'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}